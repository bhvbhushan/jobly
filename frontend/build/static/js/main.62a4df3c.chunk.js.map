{"version":3,"sources":["UserContext.js","NavBar.js","Home.js","Company/CompanyCard.js","Company/CompanyList.js","Job/JobCard.js","Job/JobList.js","Auth/Login.js","Auth/SignUp.js","api.js","Profile.js","PrivateRoutes.js","Company/CompanyDetail.js","useLocalStorage.js","Jobly.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","NavBar","useContext","currentUser","LogOut","setCurrentUser","Navbar","Nav","className","NavItem","NavLink","href","onClick","username","Home","class","to","CompanyCard","info","map","data","handle","Card","CardBody","CardTitle","name","logoUrl","src","CardText","description","CompanyList","searchCompany","companyList","useState","search","searchBar","setSearchBar","Container","Form","onSubmit","e","preventDefault","InputGroup","Input","id","type","value","onChange","target","InputGroupAddon","addonType","Button","color","JobCard","title","salary","equity","companyName","applied","setApplied","hasAppliedToJob","applyToJob","useEffect","console","debug","handleClick","a","JobList","searchJob","jobList","handleSubmit","job","Login","LoginData","history","useHistory","password","formData","setFormData","handleChange","success","push","log","FormGroup","Label","SignUp","SignUpData","firstName","lastName","email","firstname","lastname","JoblyApi","endpoint","method","url","headers","Authorization","token","params","axios","error","response","message","Array","isArray","this","request","res","company","user","Profile","profileData","saveProfile","updatedUser","PrivateRoutes","exact","path","children","CompanyDetail","useParams","companyDetail","setCompanyDetail","getCompany","companyJobs","filterJobs","jobs","useLocalStorage","key","firstValue","initialValue","localStorage","getItem","item","setItem","removeItem","Jobly","setCompanyList","setJobList","infoLoaded","setInfoLoaded","setToken","Set","applicationIds","setApplicationIds","jwt","decode","getCurrentUser","applications","getAllCompanies","companies","getAllJobs","signup","signupToken","login","loginToken","has","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62a4df3c.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport default UserContext;","import React, { useContext } from \"react\";\r\nimport UserContext from \"./UserContext\"\r\nimport { Navbar, Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport \"./NavBar.css\"\r\n\r\nconst NavBar = () => {\r\n\r\n    const { currentUser, setCurrentUser, LogOut } = useContext(UserContext)\r\n\r\n    return (\r\n\r\n        <Navbar>\r\n            <Nav className=\"nav navbar-nav navbar-right\" >\r\n                <NavItem>\r\n                    <NavLink href=\"/\">\r\n                        Jobly\r\n                        </NavLink>\r\n                </NavItem>\r\n            </Nav>\r\n            <Nav >\r\n                {currentUser\r\n                    ?\r\n                    <>\r\n                        <NavItem>\r\n                            <NavLink href=\"/companies\" >\r\n                                Companies\r\n                                </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/jobs\" >\r\n                                Jobs\r\n                                </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/profile\" >\r\n                                Profile\r\n                                </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/\" onClick={LogOut}>\r\n                                Log out {currentUser.username}\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <NavItem>\r\n                            <NavLink href=\"/login\" >\r\n                                Login\r\n                                </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/signup\" >\r\n                                Signup\r\n                                </NavLink>\r\n                        </NavItem>\r\n                    </>\r\n                }\r\n\r\n\r\n            </Nav>\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from \"./UserContext\"\r\nimport \"./Home.css\"\r\n\r\nfunction Home() {\r\n\r\n    const { currentUser } = useContext(UserContext);\r\n\r\n    return (\r\n        <section className=\"home\">\r\n            <h1 class=\"home-title\"> Jobly</h1>\r\n            {currentUser\r\n                ?\r\n                <h4 className=\"home-welcome\">Welcome Back! {currentUser.username}</h4>\r\n                :\r\n                <div className=\"home-links\">\r\n                    <Link to=\"/login\">Log in</Link>\r\n                    <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            }\r\n\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n} from \"reactstrap\";\r\nimport \"./CompanyCard.css\"\r\n\r\nconst CompanyCard = ({ info }) => {\r\n\r\n    return (\r\n        <div>\r\n            {info.map(data => (\r\n                <Link to={`/companies/${data.handle}`}>\r\n                    <Card className=\"CompanyCard\">\r\n                        <CardBody>\r\n                            <CardTitle>\r\n                                <h4>{data.name}</h4>\r\n                                {data.logoUrl\r\n                                    ?\r\n                                    <img src={`${data.logoUrl}`}></img>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </CardTitle>\r\n                            <CardText>\r\n                                {data.description}\r\n                            </CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyCard\r\n","import React, { useState } from 'react'\r\nimport {\r\n    Container,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input,\r\n    Button,\r\n    Form\r\n} from \"reactstrap\";\r\nimport CompanyCard from \"./CompanyCard\"\r\nimport \"./CompanyList.css\"\r\n\r\nconst CompanyList = ({ searchCompany, companyList }) => {\r\n\r\n    const [searchBar, setSearchBar] = useState({\r\n        search: ''\r\n    })\r\n\r\n    const handleSearch = (e) => {\r\n        const { name, value } = e.target\r\n        setSearchBar(data => ({\r\n            ...data,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchCompany(searchBar.search)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Form className=\"CompanyList-form\" onSubmit={handleSubmit}>\r\n                    <InputGroup>\r\n                        <Input\r\n                            id=\"search\"\r\n                            type=\"text\"\r\n                            name=\"search\"\r\n                            value={searchBar.search}\r\n                            onChange={handleSearch}\r\n                        />\r\n                        <InputGroupAddon addonType=\"append\">\r\n                            <Button color=\"success\">Search</Button>\r\n                        </InputGroupAddon>\r\n                    </InputGroup>\r\n                </Form>\r\n                <CompanyCard info={companyList} />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyList\r\n","import React, { useContext, useState } from 'react'\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport UserContext from \"../UserContext\";\r\nimport \"./JobCard.css\"\r\n\r\n\r\nconst JobCard = ({ id, title, salary, equity, companyName }) => {\r\n\r\n    const [applied, setApplied] = useState(false)\r\n    const { hasAppliedToJob, applyToJob } = useContext(UserContext);\r\n\r\n    React.useEffect(function updateAppliedStatus() {\r\n        console.debug(\"JobCard useEffect updateAppliedStatus\", \"id=\", id);\r\n\r\n        setApplied(hasAppliedToJob(id));\r\n    }, [id, hasAppliedToJob]);\r\n\r\n    const handleClick = async (e) => {\r\n        if (hasAppliedToJob(id)) return;\r\n        applyToJob(id);\r\n        setApplied(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"JobCard\">\r\n                <CardBody >\r\n                    <CardTitle>\r\n                        <h4>{title}</h4>\r\n                    </CardTitle>\r\n                    <CardText className=\"JobCard-CardText\">\r\n                        {companyName}\r\n                        <div>\r\n                            <small>\r\n                                Salary: ${salary}\r\n                            </small>\r\n                        </div>\r\n                        <div>\r\n                            <small>\r\n                                Equity: {equity}\r\n                            </small>\r\n                        </div>\r\n                        <Button\r\n                            className=\"JobCard-button\"\r\n                            color=\"primary\"\r\n                            onClick={handleClick}\r\n                        >{applied ? \"APPLIED\" : \"APPLY\"}</Button>\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobCard\r\n","import React, { useState } from 'react'\r\nimport {\r\n    Button,\r\n    Container,\r\n    Form,\r\n    InputGroup,\r\n    Input,\r\n    InputGroupAddon\r\n} from \"reactstrap\";\r\nimport JobCard from \"./JobCard\"\r\nimport \"./JobList.css\"\r\n\r\n\r\nconst JobList = ({ searchJob, jobList }) => {\r\n\r\n    const [searchBar, setSearchBar] = useState({\r\n        search: ''\r\n    })\r\n\r\n    const handleSearch = (e) => {\r\n        const { name, value } = e.target\r\n        setSearchBar(data => ({\r\n            ...data,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        searchJob(searchBar.search)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Form className=\"JobList-form\" onSubmit={handleSubmit}>\r\n                    <InputGroup>\r\n                        <Input\r\n                            id=\"search\"\r\n                            type=\"text\"\r\n                            name=\"search\"\r\n                            value={searchBar.search}\r\n                            onChange={handleSearch}\r\n                        />\r\n                        <InputGroupAddon addonType=\"append\">\r\n                            <Button color=\"success\">Search</Button>\r\n                        </InputGroupAddon>\r\n                    </InputGroup>\r\n                </Form>\r\n                {jobList.map(job => (\r\n                    <JobCard key={job.id}\r\n                        id={job.id}\r\n                        title={job.title}\r\n                        salary={job.salary}\r\n                        equity={job.equity}\r\n                        companyName={job.companyName} />\r\n                ))}\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobList\r\n","import React, { useState } from 'react'\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Card,\r\n    CardBody,\r\n    Container\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Login.css\"\r\n\r\nconst Login = ({ LoginData }) => {\r\n\r\n    const history = useHistory()\r\n    const INITIAL_STATE = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n    const [formData, setFormData] = useState(INITIAL_STATE)\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setFormData(data => ({\r\n            ...data,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let res = await LoginData(formData)\r\n        if (res.success) {\r\n            history.push(\"/companies\")\r\n        } else {\r\n            console.log(\"error\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\r\n                <Card className=\"Login-card\">\r\n                    <h1>Login</h1>\r\n                    <CardBody>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label>Username:</Label>\r\n                                <Input\r\n                                    id=\"username\"\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    value={formData.username}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Password:</Label>\r\n                                <Input\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    value={formData.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button color=\"primary\">Submit</Button>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Card,\r\n    CardBody,\r\n    Container\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./SignUp.css\"\r\n\r\nconst SignUp = ({ SignUpData }) => {\r\n    const history = useHistory()\r\n    const INITIAL_STATE = {\r\n        username: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: ''\r\n    }\r\n    const [formData, setFormData] = useState(INITIAL_STATE)\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setFormData(data => ({\r\n            ...data,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n        let res = await SignUpData(formData)\r\n        if (res.success) {\r\n            history.push(\"/companies\")\r\n        } else {\r\n            console.log(\"error\")\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\r\n                <Card className=\"Signup-card\">\r\n                    <h1>SignUp</h1>\r\n                    <CardBody>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label>Username:</Label>\r\n                                <Input\r\n                                    id=\"username\"\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    value={formData.username}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Password:</Label>\r\n                                <Input\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    value={formData.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>First Name:</Label>\r\n                                <Input\r\n                                    id=\"firstname\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={formData.firstname}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Last Name:</Label>\r\n                                <Input\r\n                                    id=\"lastname\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={formData.lastname}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Email:</Label>\r\n                                <Input\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button color=\"primary\">Submit</Button>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import axios from \"axios\";\n\n// const BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3002\";\nexport const BASE_URL = '';\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = (method === \"get\")\n      ? data\n      : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getAllCompanies(name) {\n\n    if (name) {\n      let res = await this.request(`companies/?name=${name}`);\n      return res;\n    } else {\n      let res = await this.request(`companies/`);\n      return res;\n    }\n  }\n\n  static async getAllJobs(title) {\n    if (title) {\n      let res = await this.request(`jobs/?title=${title}`);\n      return res;\n    } else {\n      let res = await this.request(`jobs/`);\n      return res;\n    }\n  }\n\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n\n}\n\nexport default JoblyApi;","import React, { useState, useContext } from 'react'\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Card,\r\n    CardBody,\r\n    Container,\r\n    CardText\r\n} from \"reactstrap\";\r\nimport JoblyApi from \"./api\"\r\nimport UserContext from \"./UserContext\";\r\nimport \"./Profile.css\"\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const { currentUser, setCurrentUser } = useContext(UserContext);\r\n\r\n    const [formData, setFormData] = useState({\r\n        firstName: currentUser.firstName,\r\n        lastName: currentUser.lastName,\r\n        email: currentUser.email,\r\n        username: currentUser.username,\r\n        password: \"\",\r\n    })\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setFormData(data => ({\r\n            ...data,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let profileData = {\r\n            firstName: formData.firstName,\r\n            lastName: formData.lastName,\r\n            email: formData.email,\r\n            password: formData.password,\r\n        };\r\n\r\n        let username = formData.username;\r\n        let updatedUser;\r\n\r\n        try {\r\n            updatedUser = await JoblyApi.saveProfile(username, profileData);\r\n        } catch (errors) {\r\n            console.log(\"Error\")\r\n            return;\r\n        }\r\n\r\n        setFormData(data => ({ ...data, password: \"\" }));\r\n        setCurrentUser(updatedUser);\r\n    }\r\n\r\n    return (\r\n        <Container className=\"Profile-container\">\r\n            <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\r\n                <h1>Profile</h1>\r\n                <Card className=\"Profile-card\">\r\n                    <CardBody>\r\n                        <Label>Username:</Label>\r\n                        <CardText>{currentUser.username}</CardText>\r\n                    </CardBody>\r\n                    <CardBody>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label>First Name:</Label>\r\n                                <Input\r\n                                    id=\"firstname\"\r\n                                    type=\"text\"\r\n                                    name=\"firstname\"\r\n                                    value={formData.firstName}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Last Name:</Label>\r\n                                <Input\r\n                                    id=\"lastname\"\r\n                                    type=\"text\"\r\n                                    name=\"lastname\"\r\n                                    value={formData.lastName}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Email:</Label>\r\n                                <Input\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Confirm password to make changes:</Label>\r\n                                <Input\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    value={formData.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button color=\"primary\">Save Changes</Button>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport UserContext from \"./UserContext\";\r\n\r\nconst PrivateRoutes = ({ exact, path, children }) => {\r\n\r\n    const { currentUser } = useContext(UserContext);\r\n\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n        <Route exact={exact} path={path}>\r\n            {children}\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default PrivateRoutes\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport JoblyApi from \"../api\"\r\nimport JobCard from \"../Job/JobCard\"\r\nimport {\r\n    Container,\r\n} from \"reactstrap\";\r\nimport \"./CompanyDetail.css\"\r\n\r\nconst CompanyDetail = () => {\r\n\r\n    const { handle } = useParams()\r\n    const [companyDetail, setCompanyDetail] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        async function filterJobs() {\r\n            let companyJobs = await JoblyApi.getCompany(handle);\r\n            setCompanyDetail(companyJobs)\r\n        }\r\n        filterJobs();\r\n    }, [handle]);\r\n\r\n    if (!companyDetail) return <div>is Loading</div>\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"CompanyDetail\">\r\n                <h3>{companyDetail.name}</h3>\r\n                <p>{companyDetail.description}</p>\r\n                {companyDetail.jobs.map(job => (\r\n                    <JobCard key={job.id}\r\n                        id={job.id}\r\n                        title={job.title}\r\n                        salary={job.salary}\r\n                        equity={job.equity}\r\n                        companyName={job.companyName} />\r\n                ))}\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyDetail\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useLocalStorage(key, firstValue = null) {\r\n    const initialValue = localStorage.getItem(key) || firstValue;\r\n\r\n    const [item, setItem] = useState(initialValue);\r\n\r\n    useEffect(function setKeyInLocalStorage() {\r\n        console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\r\n\r\n        if (item === null) {\r\n            localStorage.removeItem(key);\r\n        } else {\r\n            localStorage.setItem(key, item);\r\n        }\r\n    }, [key, item]);\r\n\r\n    return [item, setItem];\r\n}\r\n\r\nexport default useLocalStorage;","import React, { useState, useEffect } from 'react'\r\nimport NavBar from \"./NavBar\"\r\nimport Home from \"./Home\"\r\nimport CompanyList from \"./Company/CompanyList\"\r\nimport JobList from \"./Job/JobList\"\r\nimport Login from \"./Auth/Login\"\r\nimport SignUp from \"./Auth/SignUp\"\r\nimport Profile from \"./Profile\"\r\nimport JoblyApi from \"./api\"\r\nimport PrivateRoutes from \"./PrivateRoutes\"\r\nimport CompanyDetail from \"./Company/CompanyDetail\"\r\nimport UserContext from \"./UserContext\"\r\nimport useLocalStorage from \"./useLocalStorage\"\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\"\r\n\r\n\r\nconst Jobly = () => {\r\n\r\n    const [companyList, setCompanyList] = useState([])\r\n    const [jobList, setJobList] = useState([])\r\n    const [infoLoaded, setInfoLoaded] = useState(false);\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [token, setToken] = useLocalStorage(\"jobly-token\")\r\n    const [applicationIds, setApplicationIds] = useState(new Set([]));\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        async function getCurrentUser() {\r\n            if (token) {\r\n                try {\r\n                    let { username } = jwt.decode(token)\r\n                    JoblyApi.token = token;\r\n                    let currentUser = await JoblyApi.getCurrentUser(username);\r\n                    setCurrentUser(currentUser)\r\n                    setApplicationIds(new Set(currentUser.applications));\r\n                } catch (e) {\r\n                    console.error(\"Problem loading\", e)\r\n                    setCurrentUser(null)\r\n                }\r\n            }\r\n            setInfoLoaded(true);\r\n        }\r\n        setInfoLoaded(false);\r\n        getCurrentUser()\r\n    }, [token])\r\n\r\n    useEffect(() => {\r\n        async function getAllCompanies() {\r\n            let company = await JoblyApi.getAllCompanies();\r\n            setCompanyList(company.companies)\r\n        }\r\n        getAllCompanies();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function getAllJobs() {\r\n            let jobs = await JoblyApi.getAllJobs();\r\n            setJobList(jobs.jobs)\r\n        }\r\n        getAllJobs();\r\n    }, []);\r\n\r\n    const searchCompany = async (name) => {\r\n        let company = await JoblyApi.getAllCompanies(name);\r\n        setCompanyList(company.companies)\r\n    }\r\n\r\n    const searchJob = async (title) => {\r\n        let jobs = await JoblyApi.getAllJobs(title);\r\n        setJobList(jobs.jobs)\r\n    }\r\n\r\n    const SignUpData = async (data) => {\r\n        try {\r\n            let signupToken = await JoblyApi.signup(data);\r\n            setToken(signupToken)\r\n            return { success: true };\r\n        } catch (e) {\r\n            console.error(\"Signing failed\")\r\n            return { success: false }\r\n        }\r\n    }\r\n\r\n    const LoginData = async (data) => {\r\n        try {\r\n            let loginToken = await JoblyApi.login(data);\r\n            setToken(loginToken)\r\n            return { success: true };\r\n        } catch (e) {\r\n            console.error(\"Login failed\")\r\n            return { success: false }\r\n        }\r\n    }\r\n\r\n    const LogOut = () => {\r\n        setCurrentUser(null)\r\n        setToken(\"\")\r\n    }\r\n\r\n    function hasAppliedToJob(id) {\r\n        return applicationIds.has(id);\r\n    }\r\n\r\n    function applyToJob(id) {\r\n        if (hasAppliedToJob(id)) return;\r\n        JoblyApi.applyToJob(currentUser.username, id);\r\n        setApplicationIds(new Set([...applicationIds, id]));\r\n    }\r\n\r\n    if (!infoLoaded) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <UserContext.Provider\r\n                value={{ currentUser, setCurrentUser, LogOut, hasAppliedToJob, applyToJob }}>\r\n                <NavBar />\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route exact path=\"/login\">\r\n                        <Login\r\n                            LoginData={LoginData}\r\n                        />\r\n                    </Route>\r\n                    <Route exact path=\"/signup\">\r\n                        <SignUp\r\n                            SignUpData={SignUpData}\r\n                        />\r\n                    </Route>\r\n                    <PrivateRoutes exact path=\"/companies\">\r\n                        <CompanyList\r\n                            searchCompany={searchCompany}\r\n                            companyList={companyList} />\r\n                    </PrivateRoutes>\r\n                    <PrivateRoutes exact path=\"/companies/:handle\">\r\n                        <CompanyDetail />\r\n                    </PrivateRoutes>\r\n                    <PrivateRoutes exact path=\"/jobs\">\r\n                        <JobList\r\n                            searchJob={searchJob}\r\n                            jobList={jobList} />\r\n                    </PrivateRoutes>\r\n                    <PrivateRoutes exact path=\"/profile\">\r\n                        <Profile />\r\n                    </PrivateRoutes>\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </UserContext.Provider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Jobly;","import Jobly from \"./Jobly\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Jobly />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}