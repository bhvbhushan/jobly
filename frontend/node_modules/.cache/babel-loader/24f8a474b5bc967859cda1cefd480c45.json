{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{Button,Form,FormGroup,Label,Input,Card,CardBody,Container,CardText}from\"reactstrap\";import JoblyApi from\"./api\";import UserContext from\"./UserContext\";import\"./Profile.css\";var Profile=function Profile(){var _useContext=useContext(UserContext),currentUser=_useContext.currentUser,setCurrentUser=_useContext.setCurrentUser;var _useState=useState({firstName:currentUser.firstName,lastName:currentUser.lastName,email:currentUser.email,username:currentUser.username,password:\"\"}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var handleChange=function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setFormData(function(data){return _objectSpread(_objectSpread({},data),{},_defineProperty({},name,value));});};var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var profileData,username,updatedUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();profileData={firstName:formData.firstName,lastName:formData.lastName,email:formData.email,password:formData.password};username=formData.username;_context.prev=3;_context.next=6;return JoblyApi.saveProfile(username,profileData);case 6:updatedUser=_context.sent;_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](3);console.log(\"Error\");return _context.abrupt(\"return\");case 13:setFormData(function(data){return _objectSpread(_objectSpread({},data),{},{password:\"\"});});setCurrentUser(updatedUser);case 15:case\"end\":return _context.stop();}}},_callee,null,[[3,9]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Container,{className:\"Profile-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Profile\"}),/*#__PURE__*/_jsxs(Card,{className:\"Profile-card\",children:[/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Label,{children:\"Username:\"}),/*#__PURE__*/_jsx(CardText,{children:currentUser.username})]}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"First Name:\"}),/*#__PURE__*/_jsx(Input,{id:\"firstname\",type:\"text\",name:\"firstname\",value:formData.firstName,onChange:handleChange})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Last Name:\"}),/*#__PURE__*/_jsx(Input,{id:\"lastname\",type:\"text\",name:\"lastname\",value:formData.lastName,onChange:handleChange})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Email:\"}),/*#__PURE__*/_jsx(Input,{id:\"email\",type:\"email\",name:\"email\",value:formData.email,onChange:handleChange})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Confirm password to make changes:\"}),/*#__PURE__*/_jsx(Input,{id:\"password\",type:\"password\",name:\"password\",value:formData.password,onChange:handleChange})]}),/*#__PURE__*/_jsx(Button,{color:\"primary\",children:\"Save Changes\"})]})})]})]})});};export default Profile;","map":{"version":3,"sources":["/Users/bhvbhushan/work/springboard/jobly/frontend/src/Profile.js"],"names":["React","useState","useContext","Button","Form","FormGroup","Label","Input","Card","CardBody","Container","CardText","JoblyApi","UserContext","Profile","currentUser","setCurrentUser","firstName","lastName","email","username","password","formData","setFormData","handleChange","e","target","name","value","data","handleSubmit","preventDefault","profileData","saveProfile","updatedUser","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Card,\r\n    CardBody,\r\n    Container,\r\n    CardText\r\n} from \"reactstrap\";\r\nimport JoblyApi from \"./api\"\r\nimport UserContext from \"./UserContext\";\r\nimport \"./Profile.css\"\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const { currentUser, setCurrentUser } = useContext(UserContext);\r\n\r\n    const [formData, setFormData] = useState({\r\n        firstName: currentUser.firstName,\r\n        lastName: currentUser.lastName,\r\n        email: currentUser.email,\r\n        username: currentUser.username,\r\n        password: \"\",\r\n    })\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setFormData(data => ({\r\n            ...data,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let profileData = {\r\n            firstName: formData.firstName,\r\n            lastName: formData.lastName,\r\n            email: formData.email,\r\n            password: formData.password,\r\n        };\r\n\r\n        let username = formData.username;\r\n        let updatedUser;\r\n\r\n        try {\r\n            updatedUser = await JoblyApi.saveProfile(username, profileData);\r\n        } catch (errors) {\r\n            console.log(\"Error\")\r\n            return;\r\n        }\r\n\r\n        setFormData(data => ({ ...data, password: \"\" }));\r\n        setCurrentUser(updatedUser);\r\n    }\r\n\r\n    return (\r\n        <Container className=\"Profile-container\">\r\n            <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\r\n                <h1>Profile</h1>\r\n                <Card className=\"Profile-card\">\r\n                    <CardBody>\r\n                        <Label>Username:</Label>\r\n                        <CardText>{currentUser.username}</CardText>\r\n                    </CardBody>\r\n                    <CardBody>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label>First Name:</Label>\r\n                                <Input\r\n                                    id=\"firstname\"\r\n                                    type=\"text\"\r\n                                    name=\"firstname\"\r\n                                    value={formData.firstName}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Last Name:</Label>\r\n                                <Input\r\n                                    id=\"lastname\"\r\n                                    type=\"text\"\r\n                                    name=\"lastname\"\r\n                                    value={formData.lastName}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Email:</Label>\r\n                                <Input\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Confirm password to make changes:</Label>\r\n                                <Input\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    value={formData.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button color=\"primary\">Save Changes</Button>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}