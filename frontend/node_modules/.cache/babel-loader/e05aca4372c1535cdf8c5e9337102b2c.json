{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{Card,CardBody,CardTitle,CardText,Button}from\"reactstrap\";import UserContext from\"../UserContext\";import\"./JobCard.css\";var JobCard=function JobCard(_ref){var id=_ref.id,title=_ref.title,salary=_ref.salary,equity=_ref.equity,companyName=_ref.companyName;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),applied=_useState2[0],setApplied=_useState2[1];var _useContext=useContext(UserContext),hasAppliedToJob=_useContext.hasAppliedToJob,applyToJob=_useContext.applyToJob;React.useEffect(function updateAppliedStatus(){console.debug(\"JobCard useEffect updateAppliedStatus\",\"id=\",id);setApplied(hasAppliedToJob(id));},[id,hasAppliedToJob]);var handleClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!hasAppliedToJob(id)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:applyToJob(id);setApplied(true);case 4:case\"end\":return _context.stop();}}},_callee);}));return function handleClick(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Card,{className:\"JobCard\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(CardTitle,{children:/*#__PURE__*/_jsx(\"h4\",{children:title})}),/*#__PURE__*/_jsxs(CardText,{className:\"JobCard-CardText\",children:[companyName,/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"small\",{children:[\"Salary: $\",salary]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"small\",{children:[\"Equity: \",equity]})}),/*#__PURE__*/_jsx(Button,{className:\"JobCard-button\",color:\"primary\",onClick:handleClick,children:applied?\"APPLIED\":\"APPLY\"})]})]})})});};export default JobCard;","map":{"version":3,"sources":["/Users/bhvbhushan/work/springboard/jobly/frontend/src/Job/JobCard.js"],"names":["React","useContext","useState","Card","CardBody","CardTitle","CardText","Button","UserContext","JobCard","id","title","salary","equity","companyName","applied","setApplied","hasAppliedToJob","applyToJob","useEffect","updateAppliedStatus","console","debug","handleClick","e"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OACIC,IADJ,CAEIC,QAFJ,CAGIC,SAHJ,CAIIC,QAJJ,CAKIC,MALJ,KAMO,YANP,CAOA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAO,eAAP,CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAgD,IAA7CC,CAAAA,EAA6C,MAA7CA,EAA6C,CAAzCC,KAAyC,MAAzCA,KAAyC,CAAlCC,MAAkC,MAAlCA,MAAkC,CAA1BC,MAA0B,MAA1BA,MAA0B,CAAlBC,WAAkB,MAAlBA,WAAkB,eAE9BZ,QAAQ,CAAC,KAAD,CAFsB,wCAErDa,OAFqD,eAE5CC,UAF4C,+BAGpBf,UAAU,CAACO,WAAD,CAHU,CAGpDS,eAHoD,aAGpDA,eAHoD,CAGnCC,UAHmC,aAGnCA,UAHmC,CAK5DlB,KAAK,CAACmB,SAAN,CAAgB,QAASC,CAAAA,mBAAT,EAA+B,CAC3CC,OAAO,CAACC,KAAR,CAAc,uCAAd,CAAuD,KAAvD,CAA8DZ,EAA9D,EAEAM,UAAU,CAACC,eAAe,CAACP,EAAD,CAAhB,CAAV,CACH,CAJD,CAIG,CAACA,EAAD,CAAKO,eAAL,CAJH,EAMA,GAAMM,CAAAA,WAAW,2FAAG,iBAAOC,CAAP,sHACZP,eAAe,CAACP,EAAD,CADH,iEAEhBQ,UAAU,CAACR,EAAD,CAAV,CACAM,UAAU,CAAC,IAAD,CAAV,CAHgB,sDAAH,kBAAXO,CAAAA,WAAW,6CAAjB,CAMA,mBACI,kCACI,KAAC,IAAD,EAAM,SAAS,CAAC,SAAhB,uBACI,MAAC,QAAD,yBACI,KAAC,SAAD,wBACI,oBAAKZ,KAAL,EADJ,EADJ,cAII,MAAC,QAAD,EAAU,SAAS,CAAC,kBAApB,WACKG,WADL,cAEI,kCACI,qCACcF,MADd,GADJ,EAFJ,cAOI,kCACI,oCACaC,MADb,GADJ,EAPJ,cAYI,KAAC,MAAD,EACI,SAAS,CAAC,gBADd,CAEI,KAAK,CAAC,SAFV,CAGI,OAAO,CAAEU,WAHb,UAIER,OAAO,CAAG,SAAH,CAAe,OAJxB,EAZJ,GAJJ,GADJ,EADJ,EADJ,CA6BH,CA9CD,CAgDA,cAAeN,CAAAA,OAAf","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport UserContext from \"../UserContext\";\r\nimport \"./JobCard.css\"\r\n\r\n\r\nconst JobCard = ({ id, title, salary, equity, companyName }) => {\r\n\r\n    const [applied, setApplied] = useState(false)\r\n    const { hasAppliedToJob, applyToJob } = useContext(UserContext);\r\n\r\n    React.useEffect(function updateAppliedStatus() {\r\n        console.debug(\"JobCard useEffect updateAppliedStatus\", \"id=\", id);\r\n\r\n        setApplied(hasAppliedToJob(id));\r\n    }, [id, hasAppliedToJob]);\r\n\r\n    const handleClick = async (e) => {\r\n        if (hasAppliedToJob(id)) return;\r\n        applyToJob(id);\r\n        setApplied(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"JobCard\">\r\n                <CardBody >\r\n                    <CardTitle>\r\n                        <h4>{title}</h4>\r\n                    </CardTitle>\r\n                    <CardText className=\"JobCard-CardText\">\r\n                        {companyName}\r\n                        <div>\r\n                            <small>\r\n                                Salary: ${salary}\r\n                            </small>\r\n                        </div>\r\n                        <div>\r\n                            <small>\r\n                                Equity: {equity}\r\n                            </small>\r\n                        </div>\r\n                        <Button\r\n                            className=\"JobCard-button\"\r\n                            color=\"primary\"\r\n                            onClick={handleClick}\r\n                        >{applied ? \"APPLIED\" : \"APPLY\"}</Button>\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobCard\r\n"]},"metadata":{},"sourceType":"module"}