{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/bhvbhushan/work/springboard/jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import NavBar from\"./NavBar\";import Home from\"./Home\";import CompanyList from\"./Company/CompanyList\";import JobList from\"./Job/JobList\";import Login from\"./Auth/Login\";import SignUp from\"./Auth/SignUp\";import Profile from\"./Profile\";import JoblyApi from\"./api\";import PrivateRoutes from\"./PrivateRoutes\";import CompanyDetail from\"./Company/CompanyDetail\";import UserContext from\"./UserContext\";import useLocalStorage from\"./useLocalStorage\";import jwt from\"jsonwebtoken\";import{useHistory}from\"react-router-dom\";import{Route,Switch,BrowserRouter,Redirect}from\"react-router-dom\";var Jobly=function Jobly(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),companyList=_useState2[0],setCompanyList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),jobList=_useState4[0],setJobList=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),infoLoaded=_useState6[0],setInfoLoaded=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),currentUser=_useState8[0],setCurrentUser=_useState8[1];var _useLocalStorage=useLocalStorage(\"jobly-token\"),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),token=_useLocalStorage2[0],setToken=_useLocalStorage2[1];var _useState9=useState(new Set([])),_useState10=_slicedToArray(_useState9,2),applicationIds=_useState10[0],setApplicationIds=_useState10[1];var history=useHistory();useEffect(function(){function getCurrentUser(){return _getCurrentUser.apply(this,arguments);}function _getCurrentUser(){_getCurrentUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _jwt$decode,username,_currentUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!token){_context.next=15;break;}_context.prev=1;_jwt$decode=jwt.decode(token),username=_jwt$decode.username;JoblyApi.token=token;_context.next=6;return JoblyApi.getCurrentUser(username);case 6:_currentUser=_context.sent;setCurrentUser(_currentUser);setApplicationIds(new Set(_currentUser.applications));_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.error(\"Problem loading\",_context.t0);setCurrentUser(null);case 15:setInfoLoaded(true);case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return _getCurrentUser.apply(this,arguments);}setInfoLoaded(false);getCurrentUser();},[token]);useEffect(function(){function getAllCompanies(){return _getAllCompanies.apply(this,arguments);}function _getAllCompanies(){_getAllCompanies=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var company;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return JoblyApi.getAllCompanies();case 2:company=_context2.sent;setCompanyList(company.companies);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _getAllCompanies.apply(this,arguments);}getAllCompanies();},[]);useEffect(function(){function getAllJobs(){return _getAllJobs.apply(this,arguments);}function _getAllJobs(){_getAllJobs=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var jobs;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return JoblyApi.getAllJobs();case 2:jobs=_context3.sent;setJobList(jobs.jobs);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return _getAllJobs.apply(this,arguments);}getAllJobs();},[]);var searchCompany=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(name){var company;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return JoblyApi.getAllCompanies(name);case 2:company=_context4.sent;setCompanyList(company.companies);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function searchCompany(_x){return _ref.apply(this,arguments);};}();var searchJob=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(title){var jobs;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return JoblyApi.getAllJobs(title);case 2:jobs=_context5.sent;setJobList(jobs.jobs);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function searchJob(_x2){return _ref2.apply(this,arguments);};}();var SignUpData=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data){var signupToken;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return JoblyApi.signup(data);case 3:signupToken=_context6.sent;setToken(signupToken);return _context6.abrupt(\"return\",{success:true});case 8:_context6.prev=8;_context6.t0=_context6[\"catch\"](0);console.error(\"Signing failed\");return _context6.abrupt(\"return\",{success:false});case 12:case\"end\":return _context6.stop();}}},_callee6,null,[[0,8]]);}));return function SignUpData(_x3){return _ref3.apply(this,arguments);};}();var LoginData=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(data){var loginToken;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return JoblyApi.login(data);case 3:loginToken=_context7.sent;setToken(loginToken);return _context7.abrupt(\"return\",{success:true});case 8:_context7.prev=8;_context7.t0=_context7[\"catch\"](0);console.error(\"Login failed\");return _context7.abrupt(\"return\",{success:false});case 12:case\"end\":return _context7.stop();}}},_callee7,null,[[0,8]]);}));return function LoginData(_x4){return _ref4.apply(this,arguments);};}();var LogOut=function LogOut(){setCurrentUser(null);setToken(\"\");};function hasAppliedToJob(id){return applicationIds.has(id);}function applyToJob(id){if(hasAppliedToJob(id))return;JoblyApi.applyToJob(currentUser.username,id);setApplicationIds(new Set([].concat(_toConsumableArray(applicationIds),[id])));}if(!infoLoaded)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(UserContext.Provider,{value:{currentUser:currentUser,setCurrentUser:setCurrentUser,LogOut:LogOut,hasAppliedToJob:hasAppliedToJob,applyToJob:applyToJob},children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",children:/*#__PURE__*/_jsx(Login,{LoginData:LoginData})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/signup\",children:/*#__PURE__*/_jsx(SignUp,{SignUpData:SignUpData})}),/*#__PURE__*/_jsx(PrivateRoutes,{exact:true,path:\"/companies\",children:/*#__PURE__*/_jsx(CompanyList,{searchCompany:searchCompany,companyList:companyList})}),/*#__PURE__*/_jsx(PrivateRoutes,{exact:true,path:\"/companies/:handle\",children:/*#__PURE__*/_jsx(CompanyDetail,{})}),/*#__PURE__*/_jsx(PrivateRoutes,{exact:true,path:\"/jobs\",children:/*#__PURE__*/_jsx(JobList,{searchJob:searchJob,jobList:jobList})}),/*#__PURE__*/_jsx(PrivateRoutes,{exact:true,path:\"/profile\",children:/*#__PURE__*/_jsx(Profile,{})}),/*#__PURE__*/_jsx(Redirect,{to:\"/\"})]})]})});};export default Jobly;","map":{"version":3,"sources":["/Users/bhvbhushan/work/springboard/jobly/frontend/src/Jobly.js"],"names":["React","useState","useEffect","NavBar","Home","CompanyList","JobList","Login","SignUp","Profile","JoblyApi","PrivateRoutes","CompanyDetail","UserContext","useLocalStorage","jwt","useHistory","Route","Switch","BrowserRouter","Redirect","Jobly","companyList","setCompanyList","jobList","setJobList","infoLoaded","setInfoLoaded","currentUser","setCurrentUser","token","setToken","Set","applicationIds","setApplicationIds","history","getCurrentUser","decode","username","applications","console","error","getAllCompanies","company","companies","getAllJobs","jobs","searchCompany","name","searchJob","title","SignUpData","data","signup","signupToken","success","LoginData","login","loginToken","LogOut","hasAppliedToJob","id","has","applyToJob"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport NavBar from \"./NavBar\"\r\nimport Home from \"./Home\"\r\nimport CompanyList from \"./Company/CompanyList\"\r\nimport JobList from \"./Job/JobList\"\r\nimport Login from \"./Auth/Login\"\r\nimport SignUp from \"./Auth/SignUp\"\r\nimport Profile from \"./Profile\"\r\nimport JoblyApi from \"./api\"\r\nimport PrivateRoutes from \"./PrivateRoutes\"\r\nimport CompanyDetail from \"./Company/CompanyDetail\"\r\nimport UserContext from \"./UserContext\"\r\nimport useLocalStorage from \"./useLocalStorage\"\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\"\r\n\r\n\r\nconst Jobly = () => {\r\n\r\n    const [companyList, setCompanyList] = useState([])\r\n    const [jobList, setJobList] = useState([])\r\n    const [infoLoaded, setInfoLoaded] = useState(false);\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [token, setToken] = useLocalStorage(\"jobly-token\")\r\n    const [applicationIds, setApplicationIds] = useState(new Set([]));\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        async function getCurrentUser() {\r\n            if (token) {\r\n                try {\r\n                    let { username } = jwt.decode(token)\r\n                    JoblyApi.token = token;\r\n                    let currentUser = await JoblyApi.getCurrentUser(username);\r\n                    setCurrentUser(currentUser)\r\n                    setApplicationIds(new Set(currentUser.applications));\r\n                } catch (e) {\r\n                    console.error(\"Problem loading\", e)\r\n                    setCurrentUser(null)\r\n                }\r\n            }\r\n            setInfoLoaded(true);\r\n        }\r\n        setInfoLoaded(false);\r\n        getCurrentUser()\r\n    }, [token])\r\n\r\n    useEffect(() => {\r\n        async function getAllCompanies() {\r\n            let company = await JoblyApi.getAllCompanies();\r\n            setCompanyList(company.companies)\r\n        }\r\n        getAllCompanies();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function getAllJobs() {\r\n            let jobs = await JoblyApi.getAllJobs();\r\n            setJobList(jobs.jobs)\r\n        }\r\n        getAllJobs();\r\n    }, []);\r\n\r\n    const searchCompany = async (name) => {\r\n        let company = await JoblyApi.getAllCompanies(name);\r\n        setCompanyList(company.companies)\r\n    }\r\n\r\n    const searchJob = async (title) => {\r\n        let jobs = await JoblyApi.getAllJobs(title);\r\n        setJobList(jobs.jobs)\r\n    }\r\n\r\n    const SignUpData = async (data) => {\r\n        try {\r\n            let signupToken = await JoblyApi.signup(data);\r\n            setToken(signupToken)\r\n            return { success: true };\r\n        } catch (e) {\r\n            console.error(\"Signing failed\")\r\n            return { success: false }\r\n        }\r\n    }\r\n\r\n    const LoginData = async (data) => {\r\n        try {\r\n            let loginToken = await JoblyApi.login(data);\r\n            setToken(loginToken)\r\n            return { success: true };\r\n        } catch (e) {\r\n            console.error(\"Login failed\")\r\n            return { success: false }\r\n        }\r\n    }\r\n\r\n    const LogOut = () => {\r\n        setCurrentUser(null)\r\n        setToken(\"\")\r\n    }\r\n\r\n    function hasAppliedToJob(id) {\r\n        return applicationIds.has(id);\r\n    }\r\n\r\n    function applyToJob(id) {\r\n        if (hasAppliedToJob(id)) return;\r\n        JoblyApi.applyToJob(currentUser.username, id);\r\n        setApplicationIds(new Set([...applicationIds, id]));\r\n    }\r\n\r\n    if (!infoLoaded) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <UserContext.Provider\r\n                value={{ currentUser, setCurrentUser, LogOut, hasAppliedToJob, applyToJob }}>\r\n                <NavBar />\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route exact path=\"/login\">\r\n                        <Login\r\n                            LoginData={LoginData}\r\n                        />\r\n                    </Route>\r\n                    <Route exact path=\"/signup\">\r\n                        <SignUp\r\n                            SignUpData={SignUpData}\r\n                        />\r\n                    </Route>\r\n                    <PrivateRoutes exact path=\"/companies\">\r\n                        <CompanyList\r\n                            searchCompany={searchCompany}\r\n                            companyList={companyList} />\r\n                    </PrivateRoutes>\r\n                    <PrivateRoutes exact path=\"/companies/:handle\">\r\n                        <CompanyDetail />\r\n                    </PrivateRoutes>\r\n                    <PrivateRoutes exact path=\"/jobs\">\r\n                        <JobList\r\n                            searchJob={searchJob}\r\n                            jobList={jobList} />\r\n                    </PrivateRoutes>\r\n                    <PrivateRoutes exact path=\"/profile\">\r\n                        <Profile />\r\n                    </PrivateRoutes>\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </UserContext.Provider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Jobly;"]},"metadata":{},"sourceType":"module"}